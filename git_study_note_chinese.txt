学习笔记：
本Git也叫msysGit。
在复习过程中发现文档中提到了github自身也提供了终端。故准备下载试试。下载速度很慢20K左右，软件本身99M（20210222）
一、了解并掌握的Git命令
git clone git://git.kernel.org/pub/scm/git/git.git
这个命令半天没动静，后来强行中断放弃了。
git config --global user.name "myjackfox"
git config --global user.email "myjackfox@163.com"

git config --global core.editor emacs
这个命令没执行，放弃了。

git config --list
列出配置

git config user.name

git help config

Git基础
git init
git add *.c
git add LICENSE
git commit -m 'Initial project version'

git clone https://github.com/myjackfox/mystudy_git

git status

git add readme

git status -s

git diff

git diff --staged
git diff --cached

git difftool --tool-help

git commit

git commit -m "Story 182: Fix benchmarks for speed"

git rm PROJECTS.md
git rm --cached README

git mv file_from file_to

git log
git log -p -2
git log --stat
git log --pretty=oneline
git log --pretty=format:"%h - %an, %ar : %s"
git log --pretty=format:"%h %s" --graph
git log --since=2.weeks
git log -Sfunction_name

git commit --amend

git remote -v
git remote
git remote pd https://github.com/paulboone/ticgit
git fetch pd

git push origin master
git remote show orgin

git remote rm

git tag
git tag -l 'V1.1'
git tag -a v1.1 -m "my version 1.1"
git show v1.1

git分支


20210301学习笔记：
1、上传(试了好几次，才弄成下面的形式上传)
git push github master

下面继续看Progit
学习如何使用GitHub
Fork派生项目，项目被复制到自己的空间，赋予可修改权限。需要通过合并需求（Pull Request）发起流程，来实现创建者对Fork者的改动进行审查，必要时许可并入版本库。
1、从master分支创建一个分支
2、提交一些修改来推进项目。
3、将这个分支Push到GitHub
4、创建一个合并请求
5、讨论，根据实际情况继续修改。
6、项目拥有者合并或关闭合并请求。

为此在这里模拟创建了一个分支，尝试看看。
在这个分支下继续学习
在github尝试建立了一个issue，工作清单。（这是GitHub独有的Markdown）

维护项目
1、创建新的版本库
2、添加合作者
3、管理合并请求
4、在合作请求上进行合作
5、合并请求引用
6、合并请求之上的合并请求
7、提醒和通知
8、通知页面
9、网页通知
10、邮件通知
11、特殊文件：README、README.md、README.asciidoc
12、贡献CONTRIBUTING
13、项目管理
14、改变默认分支
15、移交项目
16、管理组织
17、脚本github
18、钩子


学习：Git 工具
选择修订版本
  单个修订版本
  分支引用  git rev-parse 分支名
  引用日志  git reflog   类似 git log -g 分支名
  祖先引用
      git log --pretty=format:'%h %s' --graph
      git show HEAD^      后面的数字用于针对合并提交的分支顺序（横向）
      git show HEAD~      后面的数字用于针对上n代的分支（纵向）
  提交区间

学到P207。开始尝试自行合并。合并结束后，删除分支，保留master。
