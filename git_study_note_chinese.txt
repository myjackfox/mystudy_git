学习笔记：
本Git也叫msysGit。
在复习过程中发现文档中提到了github自身也提供了终端。故准备下载试试。下载速度很慢20K左右，软件本身99M（20210222）
一、了解并掌握的Git命令
git clone git://git.kernel.org/pub/scm/git/git.git
这个命令半天没动静，后来强行中断放弃了。
git config --global user.name "myjackfox"
git config --global user.email "myjackfox@163.com"

git config --global core.editor emacs
这个命令没执行，放弃了。

git config --list
列出配置

git config user.name

git help config

Git基础
git init
git add *.c
git add LICENSE
git commit -m 'Initial project version'

git clone https://github.com/myjackfox/mystudy_git

git status

git add readme

git status -s

git diff

git diff --staged
git diff --cached

git difftool --tool-help

git commit

git commit -m "Story 182: Fix benchmarks for speed"

git rm PROJECTS.md
git rm --cached README

git mv file_from file_to

git log
git log -p -2
git log --stat
git log --pretty=oneline
git log --pretty=format:"%h - %an, %ar : %s"
git log --pretty=format:"%h %s" --graph
git log --since=2.weeks
git log -Sfunction_name

git commit --amend

git remote -v
git remote
git remote pd https://github.com/paulboone/ticgit
git fetch pd

git push origin master
git remote show orgin

git remote rm

git tag
git tag -l 'V1.1'
git tag -a v1.1 -m "my version 1.1"
git show v1.1

git分支


20210301学习笔记：
1、上传(试了好几次，才弄成下面的形式上传)
git push github master

下面继续看Progit
学习如何使用GitHub
Fork派生项目，项目被复制到自己的空间，赋予可修改权限。需要通过合并需求（Pull Request）发起流程，来实现创建者对Fork者的改动进行审查，必要时许可并入版本库。
1、从master分支创建一个分支
2、提交一些修改来推进项目。
3、将这个分支Push到GitHub
4、创建一个合并请求
5、讨论，根据实际情况继续修改。
6、项目拥有者合并或关闭合并请求。

为此在这里模拟创建了一个分支，尝试看看。
在这个分支下继续学习
在github尝试建立了一个issue，工作清单。（这是GitHub独有的Markdown）

维护项目
1、创建新的版本库
2、添加合作者
3、管理合并请求
4、在合作请求上进行合作
5、合并请求引用
6、合并请求之上的合并请求
7、提醒和通知
8、通知页面
9、网页通知
10、邮件通知
11、特殊文件：README、README.md、README.asciidoc
12、贡献CONTRIBUTING
13、项目管理
14、改变默认分支
15、移交项目
16、管理组织
17、脚本github
18、钩子


学习：Git 工具
选择修订版本
  单个修订版本
  分支引用  git rev-parse 分支名
  引用日志  git reflog   类似 git log -g 分支名
  祖先引用
      git log --pretty=format:'%h %s' --graph
      git show HEAD^      后面的数字用于针对合并提交的分支顺序（横向）
      git show HEAD~      后面的数字用于针对上n代的分支（纵向）
  提交区间

学到P207。开始尝试自行合并。合并结束后，删除分支，保留master。


20210302继续学习Git
ProGit基本上已经翻了一遍，觉得没啥可认真的，基本上就是一边用一边体会书上所述内容进行对比对照。

今日打算从SQL学习开始入手，为其建立一个Git，然后每日学习1-2页Online内容，做一个SQL题，写一个学习笔记，git到github上。
正好借此复习一遍Git仓库建立过程。
1、建立文件夹“SQL联机丛书”，并建立一份readme.txt。
2、Git init
3、git add .
4、git commit -m "init version:First File, README.txt"
5、在GitHub创建一个新仓库，sql_onlinedoc。下面的代码是GitHub推荐的，我就直接用了。
6、git remote add origin https://github.com/myjackfox/SQL_OnlineDoc.git
7、git branch -M main    这个开关是将旧的分支名强制更名为新的分支名
8、git push -u origin main  在push过程中，保证为每个branch建立可跟踪的逆向引用。

在执行第6步时，弄错窗口了，跑到Git那个Bash执行了，估计把原来的origin给冲了。不过，影响不大，所以要去掉这个别名。
执行命令git remote rm origin即可。
后面都基本正常了。
今天暂时就学这些了。要记得git自己的分支暂时维持。


20210303继续学习Git
1、启动Git的GitBash，更新Git，git pull失败，要求带有远程名和分支名。
2、git pull github newnotes_20210302。执行成功
3、再试一次：git fetch。也成功。
4、发现了ssh的一个问题，当初生成公钥时没学好，将项目名当成账户名发给ssh-keygen程序，造成检查测试链接时出现令人迷惑的账户信息。
5、经过查找资料，规划确定了重新生成公钥的流程，并执行成功，具体内容参见如下（内容来自D:\MyStudy\SQL联机丛书\study_notes.txt）：
	……
	20210303学习操作：
	1、git fetch。要账户和密码。
	2、鉴于这个问题是由于指定了https方式造成的，故打算改为ssh方式。
	3、web登录github取得ssh地址。结果发现需要设置ssh公钥。
	4、在本地gitbash下检查~/.ssh中是否存在id_rsa.pub，已经确认存在。请注意！~/.ssh是指用户目录下的.ssh文件夹！
	    经过使用ssh -T git@github.com检查，连接建立成功，但账户显示为mystudy_git了？？
	    经过搜索资料，最终决定重新生成公钥文件，用于正确显示账户信息。
	    a、ssh-keygen -t rsa -C "myjackfox@163.com"
	    b、将生成的pub文件打开复制内容到GitHub的相关位置保存。
	    c、ssh -T git@github.com检查，成功！
	    发现由于文件夹是中文名，好像不能在Bash中返回原来的文件夹了，只好关闭窗口后重新再进入GitBash。
	5、从GitHub的本项目那里取得ssh地址。
	6、在本项目的.git文件夹下的config配置中修改对应的url地址值为ssh地址。
	7、git add .
	8、git commit -m "20210303001:update ssh public key, and add a new studynotes file."
	9、git push origin main。     该命令执行后正确显示信息，表明上面的公钥生成命令以及相应配置修改均成功。
	10、针对操作进行上面内容的调整和补充。
        ……
6、后面学习SQL联机丛书，就没再琢磨Git。
7、今日结束。例行push全部内容。成功完成。



